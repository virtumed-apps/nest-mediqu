generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(uuid())
  email      String  @unique
  name       String
  password   String
  avatar_url String
  active     Boolean @default(true)
  first_time Boolean @default(true)

  role Role @default(user)

  userInfo   UserInfo? @relation(references: [id], fields: [userInfoId], onDelete: Cascade, onUpdate: Cascade)
  userInfoId String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model UserInfo {
  id              String  @id @default(uuid())
  he_meets        HeMeets @default(null)
  cell            String  @unique
  phone           String  @unique
  cpf             String  @unique
  birth           String
  cep             String
  adress          String
  number          String
  passport        String  @unique
  neighborhood    String
  postal_code     String
  complement      String?
  maritial_status String
  rg              String  @unique
  sex             Sex     @default(null)
  uf              String
  about           String

  user_id   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User[]

  @@map("user_info")
}

model Appointment {
  id              String  @id @default(uuid())
  id_patient      String
  id_professional String
  date_time       String
  status          Boolean
  type            String
  payment         Boolean
  in_person       Boolean
  multiple_users  Boolean

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("appointment")
}

enum Role {
  user
  doctor
  admin
}

enum HeMeets {
  agreement
  private
  public
  null
}

enum Sex {
  man
  woman
  null
}
